{"version":3,"sources":["components/moviesList/moviesList.js"],"names":["moviesList","props","state","seriesList","this","dataType","setState","seriesItemList","moviesItemList","compeleteData","movieCounter","seriesCounter","map","item","index","programType","releaseYear","className","src","images","url","alt","title","Component"],"mappings":"gOAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,YAAY,EACZH,YAAY,GAJG,E,qDAQnB,WAEMI,KAAKH,MAAMI,UAAoC,WAAxBD,KAAKH,MAAMI,SACpCD,KAAKE,SAAS,CAAEN,YAAY,EAAMG,YAAY,IACrCC,KAAKH,MAAMI,UAAoC,WAAxBD,KAAKH,MAAMI,UAC3CD,KAAKE,SAAS,CAAEN,YAAY,EAAOG,YAAY,M,oBAInD,WACE,IAEII,EAAgBC,EAFhBC,EAAgBL,KAAKH,MAAMQ,eAAiBL,KAAKH,MAAMQ,cAAgBL,KAAKH,MAAMQ,cAAgB,KAD/F,EAE0BL,KAAKF,MAAhCF,EAFC,EAEDA,WAAYG,EAFX,EAEWA,WACkBO,EAAe,EAAGC,EAAgB,EA4BtE,OA1BAJ,EAAiBE,GAAiBA,EAAcG,KAAI,SAACC,EAAMC,GACzD,OACE,cAAC,WAAD,UACwB,WAArBD,EAAKE,aAA4BF,EAAKG,aAAe,MAAQL,KAAmB,GAC/E,qBAAIM,UAAU,gBAAd,UACE,qBAAKC,IAAKL,EAAKM,OAAO,cAAcC,IAAKC,IAAI,iBAC7C,4BAAIR,EAAKS,UAFwBR,GAIjC,QAKVN,EAAiBC,GAAiBA,EAAcG,KAAI,SAACC,EAAMC,GACzD,OACE,cAAC,WAAD,UACwB,UAArBD,EAAKE,aAA2BF,EAAKG,aAAe,MAAQN,KAAkB,GAC7E,qBAAIO,UAAU,gBAAd,UACE,qBAAKC,IAAKL,EAAKM,OAAO,cAAcC,IAAKC,IAAI,iBAC7C,4BAAIR,EAAKS,UAFwBR,GAIjC,QAMR,sBAAKG,UAAU,qBAAf,UACE,2CAAcb,KAAKH,MAAMI,YACzB,qBAAKY,UAAU,YAAf,SACGd,EACC,oBAAIc,UAAU,kBAAd,SAAiCV,IAC/BP,EAAa,oBAAIiB,UAAU,kBAAd,SAAiCT,IAC5C,Y,GAxDwBe","file":"static/js/4.5566a335.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport './moviesList.css'\n\nexport default class moviesList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      seriesList: false,\n      moviesList: false,\n    }\n  }\n\n  componentDidMount() {\n\n    if (this.props.dataType && this.props.dataType === 'movies') {\n      this.setState({ moviesList: true, seriesList: false })\n    } else if (this.props.dataType && this.props.dataType === 'series') {\n      this.setState({ moviesList: false, seriesList: true })\n    }\n  }\n\n  render() {\n    let compeleteData = this.props.compeleteData && this.props.compeleteData ? this.props.compeleteData : null;\n    let { moviesList, seriesList } = this.state;\n    let seriesItemList, moviesItemList, movieCounter = 0, seriesCounter = 0;\n\n    seriesItemList = compeleteData && compeleteData.map((item, index) => {\n      return (\n        <Fragment>\n          {item.programType === 'series' && item.releaseYear >= 2010 && seriesCounter++ <= 20 ?\n            <li className=\"category-item\" key={index}>\n              <img src={item.images[\"Poster Art\"].url} alt='category img' />\n              <p>{item.title}</p>\n            </li>\n            : ''\n          }\n        </Fragment>\n      )\n    })\n    moviesItemList = compeleteData && compeleteData.map((item, index) => {\n      return (\n        <Fragment>\n          {item.programType === 'movie' && item.releaseYear >= 2010 && movieCounter++ <= 20 ?\n            <li className=\"category-item\" key={index}>\n              <img src={item.images[\"Poster Art\"].url} alt='category img' />\n              <p>{item.title}</p>\n            </li>\n            : ''\n          }\n        </Fragment >\n      )\n    })\n    return (\n      <div className=\"categories-wrapper\" >\n        <h2>Popuplar {this.props.dataType}</h2>\n        <div className=\"container\">\n          {seriesList ?\n            <ul className=\"categories-list\">{seriesItemList}</ul>\n            : moviesList ? <ul className=\"categories-list\">{moviesItemList}</ul>\n              : ''}\n        </div>\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}